{"version":3,"sources":["home.js","navbar.js","arenor.js","weather.js","covid.js","covidCountry.js","users.js","fortniteStore.js","loginHotell.js","addArena.js","editArena.js","fortniteStoreList.js","App.js","reportWebVitals.js","index.js"],"names":["Home","className","CardDeck","Card","Img","src","alt","Body","Title","Text","DropdownButton","variant","id","title","Dropdown","Item","href","Navbaren","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","Nav","Link","NavDropdown","Form","inline","FormControl","type","placeholder","Button","api","axios","create","baseURL","Arenor","state","arenorlista","status","statusAfter","getArenor","a","get","then","data","setState","createArena","post","arenaNamn","stad","landsKod","kapacitet","res","console","log","deleteArena","window","confirm","delete","alert","catch","error","style","color","marginLeft","to","text","border","width","Table","hover","this","map","arena","onClick","marginTop","Component","Weather","temperature","city","country","humidity","description","getWeather","e","preventDefault","target","elements","value","main","temp","name","sys","weather","onSubmit","Group","Label","Control","Covid","cases","deaths","recovered","covidCountry","todayCases","todayDeaths","active","critical","casesPerOneMillion","deathsPerOneMillion","totalTests","testsPerOneMillion","getCovidCountry","users","getUsers","user","userName","streetNo","zipCode","phoneNumber","roles","headers","fortniteStore","storeInfo","getStoreInfo","Row","storeItem","Col","sm","md","lg","Header","imageUrl","rarity","storeCategory","vBucks","Footer","manifestId","loginHotell","props","changeHandler","submitHandler","roll","role","username","password","onChange","addArena","editArena","put","statusText","App","path","component","exact","fortniteStoreList","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wMAqEeA,MAjEf,WACE,OACE,gCACE,qBAAKC,UAAU,kBAAf,SACE,oBAAIA,UAAU,cAAd,4BAEF,eAACC,EAAA,EAAD,CAAUD,UAAU,gBAApB,UACE,eAACE,EAAA,EAAD,CAAMF,UAAU,iBAAhB,UACE,cAACE,EAAA,EAAKC,IAAN,CAAUC,IAAI,cAAcC,IAAI,QAAQL,UAAU,kBAClD,eAACE,EAAA,EAAKI,KAAN,WACE,cAACJ,EAAA,EAAKK,MAAN,sBACA,cAACL,EAAA,EAAKM,KAAN,2EAGA,eAACC,EAAA,EAAD,CACEC,QAAQ,OACRC,GAAG,wBACHC,MAAM,aAHR,UAKE,cAACC,EAAA,EAASC,KAAV,CAAeC,KAAK,SAApB,oBACA,cAACF,EAAA,EAASC,KAAV,CAAeC,KAAK,gBAApB,+BAIN,eAACb,EAAA,EAAD,CAAMF,UAAU,iBAAhB,UACE,cAACE,EAAA,EAAKC,IAAN,CAAUC,IAAI,aAAaC,IAAI,SAASL,UAAU,kBAClD,eAACE,EAAA,EAAKI,KAAN,WACE,cAACJ,EAAA,EAAKK,MAAN,6BACA,cAACL,EAAA,EAAKM,KAAN,2DACA,eAACC,EAAA,EAAD,CACEC,QAAQ,OACRC,GAAG,wBACHC,MAAM,mBAHR,UAKE,cAACC,EAAA,EAASC,KAAV,CAAeC,KAAK,SAApB,0BACA,cAACF,EAAA,EAASC,KAAV,CAAeC,KAAK,eAApB,+BAIN,eAACb,EAAA,EAAD,CAAMF,UAAU,iBAAhB,UACE,cAACE,EAAA,EAAKC,IAAN,CACEC,IAAI,gBACJC,IAAI,WACJL,UAAU,kBAEZ,eAACE,EAAA,EAAKI,KAAN,WACE,cAACJ,EAAA,EAAKK,MAAN,+BACA,cAACL,EAAA,EAAKM,KAAN,4DACA,eAACC,EAAA,EAAD,CACEC,QAAQ,OACRC,GAAG,wBACHC,MAAM,cAHR,UAKE,cAACC,EAAA,EAASC,KAAV,CAAeC,KAAK,iBAApB,4BACA,cAACF,EAAA,EAASC,KAAV,CAAeC,KAAK,qBAApB,0C,oDCKCC,MA3Df,WACE,OACE,8BACE,eAACC,EAAA,EAAD,CAAQC,GAAG,OAAOR,QAAQ,OAAOS,OAAO,KAAxC,UACE,cAACF,EAAA,EAAOG,MAAR,CAAcpB,UAAU,iBAAiBe,KAAK,QAA9C,+BAGA,cAACE,EAAA,EAAOI,OAAR,CAAeC,gBAAc,qBAC7B,eAACL,EAAA,EAAOM,SAAR,CAAiBZ,GAAG,mBAApB,UACE,eAACa,EAAA,EAAD,CAAKxB,UAAU,UAAf,UACE,cAACwB,EAAA,EAAIC,KAAL,CAAUV,KAAK,QAAf,kBACA,cAACS,EAAA,EAAIC,KAAL,CAAUV,KAAK,UAAf,oBACA,eAACW,EAAA,EAAD,CAAad,MAAM,UAAUD,GAAG,qBAAhC,UACE,cAACe,EAAA,EAAYZ,KAAb,CAAkBC,KAAK,SAAvB,qBACA,cAACW,EAAA,EAAYZ,KAAb,CAAkBC,KAAK,gBAAvB,yBAEF,eAACW,EAAA,EAAD,CAAad,MAAM,kBAAkBD,GAAG,qBAAxC,UACE,cAACe,EAAA,EAAYZ,KAAb,CAAkBC,KAAK,eAAvB,sBACA,cAACW,EAAA,EAAYZ,KAAb,CAAkBC,KAAK,SAAvB,6BAEF,eAACW,EAAA,EAAD,CAAad,MAAM,kBAAkBD,GAAG,qBAAxC,UACE,cAACe,EAAA,EAAYZ,KAAb,CAAkBC,KAAK,iBAAvB,4BAGA,cAACW,EAAA,EAAYZ,KAAb,CAAkBC,KAAK,qBAAvB,gCAKJ,eAACY,EAAA,EAAD,CAAMC,QAAM,EAAZ,UACE,cAACC,EAAA,EAAD,CACEC,KAAK,OACLC,YAAY,qBACZ/B,UAAU,YAEZ,cAACgC,EAAA,EAAD,CAAQtB,QAAQ,kBAAhB,gC,iGChCNuB,EAAMC,IAAMC,OAAO,CACvBC,QAAS,sCAiJIC,E,kDAxIb,aAAe,IAAD,8BACZ,gBAPFC,MAAQ,CACNC,YAAa,GACbC,OAAQ,GACRC,YAAa,IAGD,EAKdC,UALc,sBAKF,4BAAAC,EAAA,sEACOV,EAAIW,IAAI,KAAKC,MAAK,qBAAGC,QAD5B,OACNA,EADM,OAEV,EAAKC,SAAS,CAAER,YAAaO,IAFnB,2CALE,EAUdE,YAVc,sBAUA,4BAAAL,EAAA,sEACIV,EAAIgB,KAAK,IAAK,CAC5BtC,GAAI,EACJuC,UAAW,eACXC,KAAM,cACNC,SAAU,MACVC,UAAW,QAND,OACRC,EADQ,OAQZC,QAAQC,IAAIF,GACZ,EAAKZ,YATO,2CAVA,EAsBde,YAtBc,uCAsBA,WAAO9C,GAAP,eAAAgC,EAAA,0DACRe,OAAOC,QAAQ,qCADP,gCAEO1B,EACd2B,OAAO,IAAMjD,GACbkC,MAAK,SAACC,GACLS,QAAQC,IAAIV,IACP,EAAKR,MAAME,OAAS,MACvB,EAAKO,SAAS,CACZN,YAAa,oBACbD,OAAQM,EAAKN,SAEfqB,MAAM,mBACI,EAAKvB,MAAME,QAAS,IAC9B,EAAKO,SAAS,CACZN,YAAa,sBACbD,OAAQM,EAAKN,YAIlBsB,OAAM,SAACC,GACNR,QAAQC,IAAIO,GACZ,EAAKhB,SAAS,CACZN,YAAa,sBACbD,OAAQM,EAAKN,YAvBT,OAENM,EAFM,OA0BVS,QAAQC,IAAIV,GACZ,EAAKJ,YA3BK,2CAtBA,sDAEZ,EAAKA,YAFO,E,0CAqDd,WAAU,IAAD,OACP,OACE,gCACE,oBAAIsB,MAAO,CAAEC,MAAO,WAAajE,UAAU,SAA3C,4BAOA,cAACgC,EAAA,EAAD,CAAQgC,MAAO,CAAEE,WAAY,QAAUxD,QAAQ,OAA/C,SACE,eAAC,IAAD,CAAMV,UAAU,YAAYmE,GAAG,YAA/B,qCACwB,SAG1B,cAACnC,EAAA,EAAD,CAAQgC,MAAO,CAAEE,WAAY,QAAUxD,QAAQ,OAA/C,SACE,cAAC,IAAD,CAAMV,UAAU,YAAYmE,GAAG,eAA/B,2CAIF,eAACjE,EAAA,EAAD,CACEgB,GAAG,OACHkD,KAAK,QACLC,OAAO,QACPrE,UAAU,OACVgE,MAAO,CAAEC,MAAM,OAASK,MAAO,SALjC,UAOE,cAACpE,EAAA,EAAKI,KAAN,UACE,eAACiE,EAAA,EAAD,CAAOC,OAAK,EAAC9D,QAAQ,OAArB,UACE,gCACE,+BACE,oCACA,sCACA,sCACA,0CACA,2CACA,yCACA,gDAGJ,gCACG+D,KAAKnC,MAAMC,YAAYmC,KAAI,SAACC,GAC3B,OACE,+BACE,6BAAKA,EAAMhE,KACX,6BAAKgE,EAAMzB,YACX,6BAAKyB,EAAMxB,OACX,6BAAKwB,EAAMvB,WACX,6BAAKuB,EAAMtB,YACX,6BACE,eAACrB,EAAA,EAAD,CACEgC,MAAO,CAAEK,OAAQ,QACjB3D,QAAQ,oBACRkE,QAAS,kBAAM,EAAKnB,YAAYkB,EAAMhE,KAHxC,UAKE,qBAAKP,IAAI,iBAAiBC,IAAI,cAAe,SAGjD,6BACE,cAAC2B,EAAA,EAAD,CACEgC,MAAO,CAAEK,OAAQ,QACjB3D,QAAQ,oBAFV,SAIE,eAAC,IAAD,CACEV,UAAU,YACVmE,GAAI,6BAFN,UAIE,qBAAK/D,IAAI,eAAeC,IAAI,cAAe,wBAU7D,oBAAI2D,MAAO,CAAEa,UAAW,OAAxB,SAAkCJ,KAAKnC,MAAMG,wB,GAzIlCqC,aC6ENC,E,4MAjFbzC,MAAQ,CACN0C,YAAa,GACbC,KAAM,GACNC,QAAS,GACTC,SAAU,GACVC,YAAa,I,EAEfC,WAAa,SAACC,GACZA,EAAEC,iBACF,IAAMN,EAAOK,EAAEE,OAAOC,SAASR,KAAKS,MAC9BR,EAAUI,EAAEE,OAAOC,SAASP,QAAQQ,MAC1CxD,IACGU,IADH,2DAEwDqC,EAFxD,YAEgEC,EAFhE,4CAIGrC,MAAK,SAACS,GACL,EAAKP,SAAS,CACZiC,YAAa1B,EAAIR,KAAK6C,KAAKC,KAC3BX,KAAM3B,EAAIR,KAAK+C,KACfX,QAAS5B,EAAIR,KAAKgD,IAAIZ,QACtBC,SAAU7B,EAAIR,KAAK6C,KAAKR,SACxBC,YAAa9B,EAAIR,KAAKiD,QAAQ,GAAGX,kB,4CAKzC,WACE,OACE,gCACE,+CACA,cAAClF,EAAA,EAAD,CACEgB,GAAG,OACHkD,KAAK,QACLpE,UAAU,OACVgE,MAAO,CAAEC,MAAM,OAASK,MAAO,SAJjC,SAME,cAACpE,EAAA,EAAKI,KAAN,UACE,eAACqB,EAAA,EAAD,CAAMqE,SAAUvB,KAAKY,WAArB,UACE,eAAC1D,EAAA,EAAKsE,MAAN,WACE,cAACtE,EAAA,EAAKuE,MAAN,mBACA,cAACvE,EAAA,EAAKwE,QAAN,CACErE,KAAK,OACL+D,KAAK,OACL9D,YAAY,sBAEd,cAACJ,EAAA,EAAKnB,KAAN,0EAGA,cAACmB,EAAA,EAAKwE,QAAN,CACErE,KAAK,OACL+D,KAAK,UACL9D,YAAY,0BAGhB,cAACC,EAAA,EAAD,CAAQF,KAAK,SAASpB,QAAQ,OAA9B,uCAON,eAACR,EAAA,EAAD,CACEgB,GAAG,OACHkD,KAAK,QACLpE,UAAU,OACVgE,MAAO,CAAEC,MAAM,OAASK,MAAO,SAJjC,UAME,uBACA,cAACpE,EAAA,EAAKK,MAAN,+CACA,eAACL,EAAA,EAAKI,KAAN,WACE,uCAAUmE,KAAKnC,MAAM0C,eACrB,uCAAUP,KAAKnC,MAAM2C,QACrB,uCAAUR,KAAKnC,MAAM4C,WACrB,4CAAeT,KAAKnC,MAAM6C,YAC1B,6CAAgBV,KAAKnC,MAAM8C,4B,GA3EjBN,aCsCPsB,E,4MArCb9D,MAAQ,CACN+D,MAAO,GACPC,OAAQ,GACRC,UAAW,I,uDAEb,WAAqB,IAAD,OAClBrE,IAAMU,IAAN,gDAA0DC,MAAK,SAACS,GAC9D,EAAKP,SAAS,CACZsD,MAAO/C,EAAIR,KAAKuD,MAChBC,OAAQhD,EAAIR,KAAKwD,OACjBC,UAAWjD,EAAIR,KAAKyD,iB,oBAK1B,WACE,OACE,gCACE,oBAAIvG,UAAU,SAAd,2BACA,cAACE,EAAA,EAAD,CACEgB,GAAG,OACHkD,KAAK,QACLpE,UAAU,OACVgE,MAAO,CAAEC,MAAM,OAASK,MAAO,SAJjC,SAME,eAACpE,EAAA,EAAKI,KAAN,WACE,cAACJ,EAAA,EAAKK,MAAN,2CAEA,uCAAUkE,KAAKnC,MAAM+D,SACrB,0CAAU5B,KAAKnC,MAAMgE,UACrB,gDAAmB7B,KAAKnC,MAAMiE,yB,GA/BtBzB,aCoFL0B,E,4MAnFblE,MAAQ,CACN4C,QAAS,GACTmB,MAAO,GACPI,WAAY,GACZH,OAAQ,GACRI,YAAa,GACbH,UAAW,GACXI,OAAQ,GACRC,SAAU,GACVC,mBAAoB,GACpBC,oBAAqB,GACrBC,WAAY,GACZC,mBAAoB,I,EAEtBC,gBAAkB,SAAC3B,GACjBA,EAAEC,iBAEF,IAAML,EAAUI,EAAEE,OAAOC,SAASP,QAAQQ,MAC1CxD,IACGU,IADH,6DAC6DsC,IAC1DrC,MAAK,SAACS,GACL,EAAKP,SAAS,CACZmC,QAAS5B,EAAIR,KAAKoC,QAClBmB,MAAO/C,EAAIR,KAAKuD,MAChBI,WAAYnD,EAAIR,KAAK2D,WACrBH,OAAQhD,EAAIR,KAAKwD,OACjBI,YAAapD,EAAIR,KAAK4D,YACtBH,UAAWjD,EAAIR,KAAKyD,UACpBI,OAAQrD,EAAIR,KAAK6D,OACjBC,SAAUtD,EAAIR,KAAK8D,SACnBC,mBAAoBvD,EAAIR,KAAK+D,mBAC7BC,oBAAqBxD,EAAIR,KAAKgE,oBAC9BC,WAAYzD,EAAIR,KAAKiE,WACrBC,mBAAoB1D,EAAIR,KAAKkE,yB,4CAKrC,WACE,OACE,gCACE,oBAAIhH,UAAU,SAAd,4BACA,cAACE,EAAA,EAAD,CACEgB,GAAG,OACHkD,KAAK,QACLpE,UAAU,OACVgE,MAAO,CAAEC,MAAM,SAAWK,MAAO,SAJnC,SAME,eAACpE,EAAA,EAAKI,KAAN,WACE,cAACJ,EAAA,EAAKK,MAAN,yFAGA,eAACoB,EAAA,EAAD,CAAMqE,SAAUvB,KAAKwC,gBAArB,UACE,cAACtF,EAAA,EAAKsE,MAAN,UACE,cAACtE,EAAA,EAAKwE,QAAN,CACErE,KAAK,OACL+D,KAAK,UACL9D,YAAY,yBAGhB,cAACC,EAAA,EAAD,CAAQF,KAAK,SAASpB,QAAQ,OAA9B,kCAIF,uBACA,4CAAe+D,KAAKnC,MAAM4C,WAC1B,8CAAiBT,KAAKnC,MAAM+D,SAC5B,4CAAe5B,KAAKnC,MAAMmE,cAC1B,iDAAiBhC,KAAKnC,MAAMgE,UAC5B,+CAAe7B,KAAKnC,MAAMoE,eAC1B,gDAAmBjC,KAAKnC,MAAMiE,aAC9B,yCAAY9B,KAAKnC,MAAMqE,UACvB,2CAAclC,KAAKnC,MAAMsE,YACzB,kDAAqBnC,KAAKnC,MAAMuE,sBAChC,qDAAqBpC,KAAKnC,MAAMwE,uBAChC,iDAAoBrC,KAAKnC,MAAMyE,cAC/B,qDAAwBtC,KAAKnC,MAAM0E,kC,GA7EpBlC,aCCrB7C,EAAMC,IAAMC,OAAO,CACvBC,QACE,yFAiEW8E,E,kDA1Db,aAAe,IAAD,8BACZ,gBAJF5E,MAAQ,CACN4E,MAAO,IAEK,EAKdC,SALc,sBAKH,4BAAAxE,EAAA,sEACQV,EAAIW,IAAI,KAAKC,MAAK,qBAAGC,QAD7B,OACLA,EADK,OAET,EAAKC,SAAS,CAAEmE,MAAOpE,IAFd,2CAHT,EAAKqE,WAFO,E,0CAUd,WACE,OACE,gCACE,oBAAInH,UAAU,SAAd,+CACA,cAACE,EAAA,EAAD,CACEgB,GAAG,OACHkD,KAAK,QACLC,OAAO,QACPrE,UAAU,OACVgE,MAAO,CAAEC,MAAM,OAASK,MAAO,SALjC,SAOE,cAACpE,EAAA,EAAKI,KAAN,UACE,eAACiE,EAAA,EAAD,CAAOC,OAAK,EAAC9D,QAAQ,OAArB,UACE,gCACE,+BACE,oCACA,sCACA,iDACA,wCACA,sCACA,4CACA,+CACA,2CAGJ,gCACG+D,KAAKnC,MAAM4E,MAAMxC,KAAI,SAAC0C,GACrB,OACE,+BACE,6BAAKA,EAAKzG,KACV,6BAAKyG,EAAKvB,OACV,6BAAKuB,EAAKC,WACV,6BAAKD,EAAKE,WACV,6BAAKF,EAAKnC,OACV,6BAAKmC,EAAKG,UACV,6BAAKH,EAAKI,cACV,6BAAKJ,EAAKK,8B,GAlDZ3C,a,yBCLd7C,EAAMC,IAAMC,OAAO,CACvBC,QACE,gFACFsF,QAAS,CACP,cAAe,0CA2DJC,E,kDAlDb,aAAe,IAAD,8BACZ,gBALFrF,MAAQ,CACNsF,UAAW,IAGC,EAKdC,aALc,sBAKC,4BAAAlF,EAAA,sEACIV,EAAIW,IAAI,KAAKC,MAAK,qBAAGC,QADzB,OACTA,EADS,OAEb,EAAKC,SAAS,CAAE6E,UAAW9E,IAFd,2CAHb,EAAK+E,eAFO,E,0CAUd,WACE,OACE,gCACE,oBAAI7H,UAAU,SAAd,4BACA,cAAC8H,EAAA,EAAD,UACGrD,KAAKnC,MAAMsF,UAAUlD,KAAI,SAACqD,GACzB,OACE,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAvB,SACE,eAACjI,EAAA,EAAD,CACEgB,GAAG,OACHkD,KAAK,QACLpE,UAAU,8BAHZ,UAKE,cAACE,EAAA,EAAKkI,OAAN,UACE,6BAAKL,EAAUlC,SAEjB,cAAC3F,EAAA,EAAKC,IAAN,aACEH,UAAU,gBACVI,IAAK2H,EAAUM,SACfhI,IAAI,OAHN,YAIY,kBAGZ,eAACH,EAAA,EAAKI,KAAN,WACE,0CAAayH,EAAUO,UACvB,4CAAeP,EAAUQ,iBACzB,0CAAaR,EAAUS,aAEzB,cAACtI,EAAA,EAAKuI,OAAN,UACE,8CAAiBV,EAAUW,iC,GA5CnB5D,aCkGb6D,E,kDA1Gb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAURC,cAAgB,SAACvD,GACf,EAAKvC,SAAL,eAAiBuC,EAAEE,OAAOK,KAAOP,EAAEE,OAAOE,SAZzB,EAenBoD,cAfmB,uCAeH,WAAOxD,GAAP,eAAA3C,EAAA,sDACd2C,EAAEC,iBAEEjC,EAAMpB,IACPe,KACC,uFACA,EAAKX,OAENO,MAAK,SAACS,GACLC,QAAQC,IAAIF,GACZ,EAAKP,SAAS,CACZP,OAAQc,EAAIR,KAAKN,SAEnBe,QAAQC,IAAI,EAAKlB,MAAME,QACE,GAArB,EAAKF,MAAME,QACb,EAAKO,SAAS,CACZN,YAAa,oCACbsG,KAAMzF,EAAIR,KAAKkG,OAEjBnF,MAAM,sCACwB,GAArB,EAAKvB,MAAME,SACpB,EAAKO,SAAS,CACZN,YAAa,+BAEfoB,MAAM,kCAGTC,OAAM,SAACC,GACNR,QAAQC,IAAIO,GACZ,EAAKhB,SAAS,CACZN,YAAa,0BACbD,OAAQc,EAAId,SAEdqB,MAAM,8BAjCI,2CAfG,sDAGjB,EAAKvB,MAAQ,CACX2G,SAAU,GACVC,SAAU,GACVH,KAAM,GACNvG,QAAQ,GAPO,E,0CAoDnB,WAAU,IAAD,EACwBiC,KAAKnC,MAA5B2G,EADD,EACCA,SAAUC,EADX,EACWA,SAClB,OACE,gCACE,oBAAIlJ,UAAU,SAAd,sBACA,cAACE,EAAA,EAAD,CACEgB,GAAG,OACHkD,KAAK,QACLpE,UAAU,OACVgE,MAAO,CAAEC,MAAM,OAASK,MAAO,SAJjC,SAME,eAACpE,EAAA,EAAKI,KAAN,WACE,cAACJ,EAAA,EAAKK,MAAN,sCACA,cAACoB,EAAA,EAAD,CAAMqE,SAAUvB,KAAKqE,cAArB,SACE,eAACnH,EAAA,EAAKsE,MAAN,WACE,cAACtE,EAAA,EAAKnB,KAAN,6DAIA,8BACE,cAACmB,EAAA,EAAKwE,QAAN,CACErE,KAAK,OACL+D,KAAK,WACLH,MAAOuD,EACPE,SAAU1E,KAAKoE,cACf9G,YAAY,oCAGhB,uBACA,8BACE,cAACJ,EAAA,EAAKwE,QAAN,CACErE,KAAK,WACL+D,KAAK,WACLH,MAAOwD,EACPC,SAAU1E,KAAKoE,cACf9G,YAAY,gCAGhB,uBACA,cAACC,EAAA,EAAD,CAAQF,KAAK,SAASpB,QAAQ,UAA9B,sBAGA,uBAEA,oBAAIsD,MAAO,CAAEa,UAAW,OAAxB,SAAkCJ,KAAKnC,MAAMyG,OAC7C,oBAAI/E,MAAO,CAAEa,UAAW,OAAxB,SAAkCJ,KAAKnC,MAAMG,+B,GAlGnCqC,a,OCiIXsE,E,kDA/Hb,WAAYR,GAAQ,IAAD,8BACjB,cAAMA,IAYRC,cAAgB,SAACvD,GACf,EAAKvC,SAAL,eAAiBuC,EAAEE,OAAOK,KAAOP,EAAEE,OAAOE,SAdzB,EAiBnBoD,cAjBmB,uCAiBH,WAAOxD,GAAP,eAAA3C,EAAA,sDACd2C,EAAEC,iBAEEjC,EAAMpB,IACPe,KAAK,oCAAqC,EAAKX,OAC/CO,MAAK,SAACS,GACLC,QAAQC,IAAIF,IACP,EAAKhB,MAAME,OAAS,MACvB,EAAKO,SAAS,CACZN,YAAa,wBACbD,OAAQc,EAAId,SAEdqB,MAAM,kCACL,IACE,MAEO,EAAKvB,MAAME,QAAS,KAC9B,EAAKO,SAAS,CACZN,YAAa,4BACbD,OAAQc,EAAId,SAEdqB,MAAM,0CAGTC,OAAM,SAACC,GACNR,QAAQC,IAAIO,GACZ,EAAKhB,SAAS,CACZN,YAAa,0BACbD,OAAQc,EAAId,SAEdqB,MAAM,oCA9BI,2CAjBG,sDAGjB,EAAKvB,MAAQ,CACXY,UAAW,GACXC,KAAM,GACNC,SAAU,GACVC,UAAW,GACXb,OAAQ,GACRC,YAAa,IATE,E,0CAmDnB,WAAU,IAAD,EAC0CgC,KAAKnC,MAA9CY,EADD,EACCA,UAAWC,EADZ,EACYA,KAAMC,EADlB,EACkBA,SAAUC,EAD5B,EAC4BA,UACnC,OACE,gCACE,oBAAIrD,UAAU,SAAd,sCAEA,cAACE,EAAA,EAAD,CACEgB,GAAG,OACHkD,KAAK,QACLpE,UAAU,OACVgE,MAAO,CAAEC,MAAM,OAASK,MAAO,SAJjC,SAME,eAACpE,EAAA,EAAKI,KAAN,WACE,cAACJ,EAAA,EAAKK,MAAN,4BACA,cAACoB,EAAA,EAAD,CAAMqE,SAAUvB,KAAKqE,cAArB,SACE,eAACnH,EAAA,EAAKsE,MAAN,WACE,cAACtE,EAAA,EAAKnB,KAAN,8CAEA,8BACE,cAACmB,EAAA,EAAKwE,QAAN,CACErE,KAAK,OACL+D,KAAK,YACLH,MAAOxC,EACPiG,SAAU1E,KAAKoE,cACf9G,YAAY,iBAGhB,uBACA,8BACE,cAACJ,EAAA,EAAKwE,QAAN,CACErE,KAAK,OACL+D,KAAK,OACLH,MAAOvC,EACPgG,SAAU1E,KAAKoE,cACf9G,YAAY,WAGhB,uBACA,8BACE,cAACJ,EAAA,EAAKwE,QAAN,CACErE,KAAK,OACL+D,KAAK,WACLH,MAAOtC,EACP+F,SAAU1E,KAAKoE,cACf9G,YAAY,eAGhB,uBACA,8BACE,cAACJ,EAAA,EAAKwE,QAAN,CACErE,KAAK,OACL+D,KAAK,YACLH,MAAOrC,EACP8F,SAAU1E,KAAKoE,cACf9G,YAAY,gBAGhB,uBACA,cAACC,EAAA,EAAD,CAAQF,KAAK,SAASpB,QAAQ,UAA9B,6BAGA,cAACsB,EAAA,EAAD,CAAQgC,MAAO,CAAEE,WAAY,QAAUxD,QAAQ,SAA/C,SACE,cAAC,IAAD,CAAMV,UAAU,YAAYmE,GAAG,UAA/B,wBAIF,uBACA,oBAAIH,MAAO,CAAEa,UAAW,OAAxB,SAAkCJ,KAAKnC,MAAMG,+B,GAvHtCqC,aC0IRuE,E,kDAzIb,WAAYT,GAAQ,IAAD,8BACjB,cAAMA,IAcRC,cAAgB,SAACvD,GACf,EAAKvC,SAAL,eAAiBuC,EAAEE,OAAOK,KAAOP,EAAEE,OAAOE,SAhBzB,EAmBnBoD,cAnBmB,uCAmBH,WAAOxD,GAAP,eAAA3C,EAAA,sDACd2C,EAAEC,iBAEEjC,EAAMpB,IACPoH,IAAI,oCAAsC,EAAKhH,MAAM3B,GAAI,EAAK2B,OAC9DO,MAAK,SAACS,GACLC,QAAQC,IAAIF,IACP,EAAKhB,MAAME,OAAS,MACvB,EAAKO,SAAS,CACZN,YAAa,wBACbD,OAAQc,EAAId,SAEdqB,MAAM,oCACI,EAAKvB,MAAME,QAAS,KAC9B,EAAKO,SAAS,CACZN,YAAa,yBACbD,OAAQc,EAAId,SAEdqB,MAAM,oCAGTC,OAAM,SAACC,GACNR,QAAQC,IAAIO,GACZ,EAAKhB,SAAS,CACZN,YAAa,yBACbD,OAAQc,EAAId,SAEdqB,MAAM,6BA3BI,2CAnBG,sDAGjB,EAAKvB,MAAQ,CACX3B,GAAI,GACJuC,UAAW,GACXC,KAAM,GACNC,SAAU,GACVC,UAAW,GACXkG,WAAY,GACZ/G,OAAQ,GACRC,YAAa,IAXE,E,0CAkDnB,WAAU,IAAD,EAC8CgC,KAAKnC,MAAlD3B,EADD,EACCA,GAAIuC,EADL,EACKA,UAAWC,EADhB,EACgBA,KAAMC,EADtB,EACsBA,SAAUC,EADhC,EACgCA,UACvC,OACE,gCACE,oBAAIrD,UAAU,SAAd,uCAEA,cAACE,EAAA,EAAD,CACEgB,GAAG,OACHkD,KAAK,QACLpE,UAAU,OACVgE,MAAO,CAAEC,MAAM,OAASK,MAAO,SAJjC,SAME,eAACpE,EAAA,EAAKI,KAAN,WACE,cAACJ,EAAA,EAAKK,MAAN,+BACA,cAACoB,EAAA,EAAD,CAAMqE,SAAUvB,KAAKqE,cAArB,SACE,eAACnH,EAAA,EAAKsE,MAAN,WACE,cAACtE,EAAA,EAAKnB,KAAN,kDACA,8BACE,cAACmB,EAAA,EAAKwE,QAAN,CACErE,KAAK,OACL+D,KAAK,KACLH,MAAO/E,EACPwI,SAAU1E,KAAKoE,cACf9G,YAAY,eAGhB,uBAEA,8BACE,cAACJ,EAAA,EAAKwE,QAAN,CACErE,KAAK,OACL+D,KAAK,YACLH,MAAOxC,EACPiG,SAAU1E,KAAKoE,cACf9G,YAAY,iBAGhB,uBACA,8BACE,cAACJ,EAAA,EAAKwE,QAAN,CACErE,KAAK,OACL+D,KAAK,OACLH,MAAOvC,EACPgG,SAAU1E,KAAKoE,cACf9G,YAAY,WAGhB,uBACA,8BACE,cAACJ,EAAA,EAAKwE,QAAN,CACErE,KAAK,OACL+D,KAAK,WACLH,MAAOtC,EACP+F,SAAU1E,KAAKoE,cACf9G,YAAY,eAGhB,uBACA,8BACE,cAACJ,EAAA,EAAKwE,QAAN,CACErE,KAAK,OACL+D,KAAK,YACLH,MAAOrC,EACP8F,SAAU1E,KAAKoE,cACf9G,YAAY,gBAGhB,uBACA,cAACC,EAAA,EAAD,CAAQF,KAAK,SAASpB,QAAQ,UAA9B,yBAGA,cAACsB,EAAA,EAAD,CAAQgC,MAAO,CAAEE,WAAY,QAAUxD,QAAQ,SAA/C,SACE,cAAC,IAAD,CAAMV,UAAU,YAAYmE,GAAG,UAA/B,wBAIF,uBACA,oBAAIH,MAAO,CAAEa,UAAW,OAAxB,SAAkCJ,KAAKnC,MAAMG,cAC7C,wC,GAjIQqC,aCAlB7C,EAAMC,IAAMC,OAAO,CACvBC,QACE,gFACFsF,QAAS,CACP,cAAe,0CAyEJC,E,kDAhEb,aAAe,IAAD,8BACZ,gBALFrF,MAAQ,CACNsF,UAAW,IAGC,EAKdC,aALc,sBAKC,4BAAAlF,EAAA,sEACIV,EAAIW,IAAI,KAAKC,MAAK,qBAAGC,QADzB,OACTA,EADS,OAEb,EAAKC,SAAS,CAAE6E,UAAW9E,IAFd,2CAHb,EAAK+E,eAFO,E,0CAUd,WACE,OACE,gCACE,oBAAI7D,MAAO,CAAEC,MAAO,WAAajE,UAAU,SAA3C,4BAGA,cAACE,EAAA,EAAD,CACEgB,GAAG,OACHkD,KAAK,QACLC,OAAO,QACPrE,UAAU,OACVgE,MAAO,CAAEC,MAAM,OAASK,MAAO,SALjC,SAOE,eAACpE,EAAA,EAAKI,KAAN,WACE,cAACJ,EAAA,EAAKK,MAAN,iDAEA,eAACgE,EAAA,EAAD,CAAOC,OAAK,EAAC9D,QAAQ,OAArB,UACE,gCACE,+BACE,sCACA,sCACA,+CACA,0CACA,wCACA,+CAGJ,gCACG+D,KAAKnC,MAAMsF,UAAUlD,KAAI,SAACqD,GACzB,OACE,+BACE,6BACE,qBACE/H,UAAU,QACVI,IAAK2H,EAAUM,SACfhI,IAAI,UAGR,6BAAK0H,EAAUlC,OACf,6BAAKkC,EAAUO,SACf,6BAAKP,EAAUQ,gBACf,6BAAKR,EAAUS,SACf,6BAAKT,EAAUW,oC,GAzDT5D,aC4Bb0E,MA5Bf,WACE,OACE,cAAC,IAAD,UACE,sBAAKxJ,UAAU,MAAf,UACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOyJ,KAAK,QAAQC,UAAW3J,IAC/B,cAAC,IAAD,CAAO0J,KAAK,UAAUC,UAAWrH,IACjC,cAAC,IAAD,CAAOoH,KAAK,WAAWC,UAAW3E,IAClC,cAAC,IAAD,CAAO0E,KAAK,SAASC,UAAWtD,IAChC,cAAC,IAAD,CAAOqD,KAAK,gBAAgBC,UAAWlD,IACvC,cAAC,IAAD,CAAOmD,OAAK,EAACF,KAAK,SAASC,UAAWxC,IACtC,cAAC,IAAD,CAAOyC,OAAK,EAACF,KAAK,iBAAiBC,UAAW/B,IAC9C,cAAC,IAAD,CAAOgC,OAAK,EAACF,KAAK,eAAeC,UAAWf,IAC5C,cAAC,IAAD,CAAOgB,OAAK,EAACF,KAAK,YAAYC,UAAWN,IACzC,cAAC,IAAD,CAAOO,OAAK,EAACF,KAAK,iBAAiBC,UAAWL,IAC9C,cAAC,IAAD,CACEM,OAAK,EACLF,KAAK,qBACLC,UAAWE,IAEb,cAAC,IAAD,CAAOD,OAAK,EAACF,KAAK,IAAIC,UAAW3J,aCvB5B8J,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBlH,MAAK,YAAkD,IAA/CmH,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.2b767534.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Card, CardDeck, Dropdown, DropdownButton } from \"react-bootstrap\";\n\nfunction Home() {\n  return (\n    <div>\n      <div className=\"rubrik_home_div\">\n        <h1 className=\"rubrik_home\">Välkommen</h1>\n      </div>\n      <CardDeck className=\"CardDeck-Home\">\n        <Card className=\"Home-main-card\">\n          <Card.Img src=\"/Covid1.jpg\" alt=\"Covid\" className=\"Home-Card-img\" />\n          <Card.Body>\n            <Card.Title>COVID19</Card.Title>\n            <Card.Text>\n              Här kan du se uppdaterad information om COVID sprindnigen\n            </Card.Text>\n            <DropdownButton\n              variant=\"dark\"\n              id=\"dropdown-basic-button\"\n              title=\"Covid-Info\"\n            >\n              <Dropdown.Item href=\"/covid\">Gobalt</Dropdown.Item>\n              <Dropdown.Item href=\"/covidCountry\">Per land</Dropdown.Item>\n            </DropdownButton>\n          </Card.Body>\n        </Card>\n        <Card className=\"Home-main-card\">\n          <Card.Img src=\"hotel1.jpg\" alt=\"Hotell\" className=\"Home-Card-img\" />\n          <Card.Body>\n            <Card.Title>Hotel SeaSharp</Card.Title>\n            <Card.Text>Använd dig av funktioner från hotellet</Card.Text>\n            <DropdownButton\n              variant=\"dark\"\n              id=\"dropdown-basic-button\"\n              title=\"Hotel-Funktioner\"\n            >\n              <Dropdown.Item href=\"/Users\">Admin konton</Dropdown.Item>\n              <Dropdown.Item href=\"/loginHotell\">Logga in</Dropdown.Item>\n            </DropdownButton>\n          </Card.Body>\n        </Card>\n        <Card className=\"Home-main-card\">\n          <Card.Img\n            src=\"fortnite1.jpg\"\n            alt=\"Fortnite\"\n            className=\"Home-Card-img\"\n          />\n          <Card.Body>\n            <Card.Title>Fortnite butiken</Card.Title>\n            <Card.Text>Spana in vad du kan spendera dina Vbuks på</Card.Text>\n            <DropdownButton\n              variant=\"dark\"\n              id=\"dropdown-basic-button\"\n              title=\"Till shopen\"\n            >\n              <Dropdown.Item href=\"/fortniteStore\">Visa rutnät</Dropdown.Item>\n              <Dropdown.Item href=\"/fortniteStoreList\">\n                Visa i lista\n              </Dropdown.Item>\n            </DropdownButton>\n          </Card.Body>\n        </Card>\n      </CardDeck>\n    </div>\n  );\n}\n\nexport default Home;\n","import React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Navbar, NavDropdown, Form, Button, Nav, FormControl } from \"react-bootstrap\";\n\nfunction Navbaren() {\n  return (\n    <div>\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\n        <Navbar.Brand className=\"nav-link-brand\" href=\"/home\">\n          Out Of Boundaries\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <Nav.Link href=\"/home\">Home</Nav.Link>\n            <Nav.Link href=\"/arenor\">Arenor</Nav.Link>\n            <NavDropdown title=\"COVID19\" id=\"basic-nav-dropdown\">\n              <NavDropdown.Item href=\"/covid\">Globalt</NavDropdown.Item>\n              <NavDropdown.Item href=\"/covidCountry\">Per Land</NavDropdown.Item>\n            </NavDropdown>\n            <NavDropdown title=\"Hotell SeaSharp\" id=\"basic-nav-dropdown\">\n              <NavDropdown.Item href=\"/loginHotell\">Logga In</NavDropdown.Item>\n              <NavDropdown.Item href=\"/users\">Admin Konton</NavDropdown.Item>\n            </NavDropdown>\n            <NavDropdown title=\"Fortnite-Shopen\" id=\"basic-nav-dropdown\">\n              <NavDropdown.Item href=\"/fortniteStore\">\n                Visa rutlät\n              </NavDropdown.Item>\n              <NavDropdown.Item href=\"/fortniteStoreList\">\n                Visa i lista\n              </NavDropdown.Item>\n            </NavDropdown>\n          </Nav>\n          <Form inline>\n            <FormControl\n              type=\"text\"\n              placeholder=\"Sök på sidan\" /* Denna sökfunktion är ej i funktion, endast där för utsende */\n              className=\"mr-sm-2\"\n            />\n            <Button variant=\"outline-success\">Sök</Button>\n          </Form>\n        </Navbar.Collapse>\n      </Navbar>\n\n      {/*  \n       Gammal Navbar, används ej!\n       \n       <div className=\"Navbar\">\n          <ul>\n       <li><Link to=\"/home\">Home</Link></li>\n       <li><Link to=\"/arenor\">Arenor</Link></li>\n       <li><Link to=\"/weather\">Väder</Link></li>\n       <li><Link to=\"/covid\">COVID19-Globalt</Link></li>\n       <li><Link to=\"/covidCountry\">COVID19-per-land</Link></li>\n       <li><Link to=\"/Users\">Konton-Hotell</Link></li>\n       <li><Link to=\"/fortniteStore\">Fortnite-Shop</Link></li>\n       <li><Link to=\"/loginHotell\">Logga in-Hotell</Link></li>\n       <li><Link to=\"/fortniteStoreList\">Fortnite-Shop-Lista</Link></li>\n       </ul>  */}\n    </div>\n  );\n}\n\nexport default Navbaren;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Link } from \"react-router-dom\";\nimport { Card, Table, Button } from \"react-bootstrap\";\n\nconst api = axios.create({\n  baseURL: \"http://localhost:5000/api/Arenas/\",\n});\nclass Arenor extends Component {\n  state = {\n    arenorlista: [],\n    status: \"\",\n    statusAfter: \"\",\n  };\n\n  constructor() {\n    super();\n    this.getArenor();\n  }\n\n  getArenor = async () => {\n    let data = await api.get(\"/\").then(({ data }) => data);\n    this.setState({ arenorlista: data });\n  };\n\n  createArena = async () => {  /* Hårdkodad lägg till arena, Ej aktiv längre */\n    let res = await api.post(\"/\", {\n      id: 0,\n      arenaNamn: \"Gamla Ullevi\",\n      stad: \"Göteborg\",\n      landsKod: \"SWE\",\n      kapacitet: 18416,\n    });\n    console.log(res);\n    this.getArenor();\n  };\n\n  deleteArena = async (id) => {\n    if (window.confirm(\"Är du säker du vill radera?\")) {\n      let data = await api\n        .delete(\"/\" + id)\n        .then((data) => {\n          console.log(data);\n          if ((this.state.status = 204)) {\n            this.setState({\n              statusAfter: \"Radering lyckades\",\n              status: data.status,\n            });\n            alert(\"Arena raderad\");\n          } else if ((this.state.status = !204)) {\n            this.setState({\n              statusAfter: \"Misslyckades radera\",\n              status: data.status,\n            });\n          }\n        })\n        .catch((error) => {\n          console.log(error);\n          this.setState({\n            statusAfter: \"Misslyckades radera\",\n            status: data.status,\n          });\n        });\n      console.log(data);\n      this.getArenor();\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <h1 style={{ color: \"#363535\" }} className=\"rubrik\">\n          Fotbollsarenor\n        </h1>\n        {/* <Button variant=\"dark\" onClick={this.createArena}>  \n        // Hårdkodad lägg till ny arena \n          Lägg till en ny arena (HK)\n        </Button> */}\n        <Button style={{ marginLeft: \"10px\" }} variant=\"dark\">\n          <Link className=\"text-link\" to=\"/addArena\">\n            Lägg till en ny arena{\" \"}\n          </Link>\n        </Button>\n        <Button style={{ marginLeft: \"10px\" }} variant=\"dark\">\n          <Link className=\"text-link\" to=\"/editArena/1\">\n            Ändra en befintlig arena\n          </Link>\n        </Button>\n        <Card\n          bg=\"dark\"\n          text=\"white\"\n          border=\"light\"\n          className=\"mb-3\"\n          style={{ color: `#000`, width: \"52rem\" }}\n        >\n          <Card.Body>\n            <Table hover variant=\"dark\">\n              <thead>\n                <tr>\n                  <th>Nr</th>\n                  <th>Namn</th>\n                  <th>Stad</th>\n                  <th>Landskod</th>\n                  <th>Kapacitet</th>\n                  <th>Ta bort</th>\n                  <th>Uppdatera</th>\n                </tr>\n              </thead>\n              <tbody>\n                {this.state.arenorlista.map((arena) => {\n                  return (\n                    <tr>\n                      <td>{arena.id}</td>\n                      <td>{arena.arenaNamn}</td>\n                      <td>{arena.stad}</td>\n                      <td>{arena.landsKod}</td>\n                      <td>{arena.kapacitet}</td>\n                      <td>\n                        <Button\n                          style={{ border: \"none\" }}\n                          variant=\"outline-secondary\"\n                          onClick={() => this.deleteArena(arena.id)}\n                        >\n                          <img src=\"trash-fill.svg\" alt=\"Bootstrap\" />{\" \"}\n                        </Button>\n                      </td>\n                      <td>\n                        <Button\n                          style={{ border: \"none\" }}\n                          variant=\"outline-secondary\"\n                        >\n                          <Link\n                            className=\"text-link\"\n                            to={\"/editArena/{this.arena.id}\"}\n                          >\n                            <img src=\"pen-fill.svg\" alt=\"Bootstrap\" />{\" \"}\n                          </Link>\n                        </Button>\n                      </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </Table>\n          </Card.Body>\n          <h3 style={{ marginTop: \"3px\" }}>{this.state.statusAfter}</h3>\n        </Card>\n      </div>\n    );\n  }\n}\nexport default Arenor;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Button, Form, Card } from \"react-bootstrap\";\n\nclass Weather extends Component {\n  state = {\n    temperature: \"\",\n    city: \"\",\n    country: \"\",\n    humidity: \"\",\n    description: \"\",\n  };\n  getWeather = (e) => {\n    e.preventDefault();\n    const city = e.target.elements.city.value;\n    const country = e.target.elements.country.value;\n    axios\n      .get(\n        `http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=72bc97862fc314e021f44610d4d0c869`\n      )\n      .then((res) => {\n        this.setState({\n          temperature: res.data.main.temp,\n          city: res.data.name,\n          country: res.data.sys.country,\n          humidity: res.data.main.humidity,\n          description: res.data.weather[0].description,\n        });\n      });\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>Väder idag</h1>\n        <Card\n          bg=\"dark\"\n          text=\"white\"\n          className=\"mb-3\"\n          style={{ color: `#000`, width: \"26rem\" }}\n        >\n          <Card.Body>\n            <Form onSubmit={this.getWeather}>\n              <Form.Group>\n                <Form.Label>Stad</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  name=\"city\"\n                  placeholder=\"Skriv in din stad\"\n                />\n                <Form.Text>\n                  Skriv in stad och land för att få väderinformation\n                </Form.Text>\n                <Form.Control\n                  type=\"text\"\n                  name=\"country\"\n                  placeholder=\"Skriv in ditt land\"\n                />\n              </Form.Group>\n              <Button type=\"submit\" variant=\"info\">\n                Läs in väder\n              </Button>\n            </Form>\n          </Card.Body>\n        </Card>\n\n        <Card\n          bg=\"dark\"\n          text=\"white\"\n          className=\"mb-3\"\n          style={{ color: `#000`, width: \"26rem\" }}\n        >\n          <br />\n          <Card.Title>Väder idag är följande:</Card.Title>\n          <Card.Body>\n            <p>Temp: {this.state.temperature}</p>\n            <p>Stad: {this.state.city}</p>\n            <p>Land: {this.state.country}</p>\n            <p>Fuktighet: {this.state.humidity}</p>\n            <p>Beskriving: {this.state.description}</p>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\nexport default Weather;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Card, Button } from \"react-bootstrap\";\n\nclass Covid extends Component {\n  state = {\n    cases: \"\",\n    deaths: \"\",\n    recovered: \"\",\n  };\n  componentDidMount() {\n    axios.get(`https://coronavirus-19-api.herokuapp.com/all`).then((res) => {\n      this.setState({\n        cases: res.data.cases,\n        deaths: res.data.deaths,\n        recovered: res.data.recovered,\n      });\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <h1 className=\"rubrik\">COVID globalt</h1>\n        <Card\n          bg=\"dark\"\n          text=\"white\"\n          className=\"mb-3\"\n          style={{ color: `#000`, width: \"20rem\" }}\n        >\n          <Card.Body>\n            <Card.Title>Covid statestik från idag</Card.Title>\n\n            <p>Fall: {this.state.cases}</p>\n            <p>Döda: {this.state.deaths}</p>\n            <p>Tillfrisknade: {this.state.recovered}</p>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\nexport default Covid;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Button, Form, Card } from \"react-bootstrap\";\n\nclass covidCountry extends Component {\n  state = {\n    country: \"\",\n    cases: \"\",\n    todayCases: \"\",\n    deaths: \"\",\n    todayDeaths: \"\",\n    recovered: \"\",\n    active: \"\",\n    critical: \"\",\n    casesPerOneMillion: \"\",\n    deathsPerOneMillion: \"\",\n    totalTests: \"\",\n    testsPerOneMillion: \"\",\n  };\n  getCovidCountry = (e) => {\n    e.preventDefault();\n\n    const country = e.target.elements.country.value;\n    axios\n      .get(`https://coronavirus-19-api.herokuapp.com/countries/${country}`)\n      .then((res) => {\n        this.setState({\n          country: res.data.country,\n          cases: res.data.cases,\n          todayCases: res.data.todayCases,\n          deaths: res.data.deaths,\n          todayDeaths: res.data.todayDeaths,\n          recovered: res.data.recovered,\n          active: res.data.active,\n          critical: res.data.critical,\n          casesPerOneMillion: res.data.casesPerOneMillion,\n          deathsPerOneMillion: res.data.deathsPerOneMillion,\n          totalTests: res.data.totalTests,\n          testsPerOneMillion: res.data.testsPerOneMillion,\n        });\n      });\n  };\n\n  render() {\n    return (\n      <div>\n        <h1 className=\"rubrik\">COVID per land</h1>\n        <Card\n          bg=\"dark\"\n          text=\"white\"\n          className=\"mb-3\"\n          style={{ color: `#29A3E`, width: \"30rem\" }}\n        >\n          <Card.Body>\n            <Card.Title>\n              Skriv in ett land för att få COVID19 informaton för aktuellt land\n            </Card.Title>\n            <Form onSubmit={this.getCovidCountry}>\n              <Form.Group>\n                <Form.Control\n                  type=\"text\"\n                  name=\"country\"\n                  placeholder=\"Skriv in ditt land\"\n                />\n              </Form.Group>\n              <Button type=\"submit\" variant=\"info\">\n                Få information\n              </Button>\n            </Form>\n            <br></br>\n            <p>Valt land: {this.state.country}</p>\n            <p>Totala fall: {this.state.cases}</p>\n            <p>Fall idag: {this.state.todayCases}</p>\n            <p>Totalt döda: {this.state.deaths}</p>\n            <p>Döda idag: {this.state.todayDeaths}</p>\n            <p>Tillfrisknade: {this.state.recovered}</p>\n            <p>Aktiva: {this.state.active}</p>\n            <p>Kritiska: {this.state.critical}</p>\n            <p>Fall per miljon: {this.state.casesPerOneMillion}</p>\n            <p>Döda per miljon: {this.state.deathsPerOneMillion}</p>\n            <p>Totalt testade: {this.state.totalTests}</p>\n            <p>Testade per miljon: {this.state.testsPerOneMillion}</p>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\nexport default covidCountry;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Card, Table } from \"react-bootstrap\";\n\nconst api = axios.create({\n  baseURL:\n    \"https://thingproxy.freeboard.io/fetch/http://informatik10.ei.hv.se/UserService/Users\",\n});\n\nclass users extends Component {\n  state = {\n    users: [],\n  };\n  constructor() {\n    super();\n    this.getUsers();\n  }\n\n  getUsers = async () => {\n    let data = await api.get(\"/\").then(({ data }) => data);\n    this.setState({ users: data });\n  };\n\n  render() {\n    return (\n      <div>\n        <h1 className=\"rubrik\">Aktiva adminkonton från hotell</h1>\n        <Card\n          bg=\"dark\"\n          text=\"white\"\n          border=\"light\"\n          className=\"mb-3\"\n          style={{ color: `#000`, width: \"65rem\" }}\n        >\n          <Card.Body>\n            <Table hover variant=\"dark\">\n              <thead>\n                <tr>\n                  <th>Id</th>\n                  <th>Namn</th>\n                  <th>Användarnamn</th>\n                  <th>Adress</th>\n                  <th>Stad</th>\n                  <th>Postnummer</th>\n                  <th>Telefonnummer</th>\n                  <th>Roll</th>\n                </tr>\n              </thead>\n              <tbody>\n                {this.state.users.map((user) => {\n                  return (\n                    <tr>\n                      <td>{user.id}</td>\n                      <td>{user.name}</td>\n                      <td>{user.userName}</td>\n                      <td>{user.streetNo}</td>\n                      <td>{user.city}</td>\n                      <td>{user.zipCode}</td>\n                      <td>{user.phoneNumber}</td>\n                      <td>{user.roles}</td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\nexport default users;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Card, Button, Table, CardDeck, Row, Col } from \"react-bootstrap\";\n\nconst api = axios.create({\n  baseURL:\n    \"https://thingproxy.freeboard.io/fetch/http://api.fortnitetracker.com/v1/store\",\n  headers: {\n    \"TRN-Api-Key\": \"6fb87b36-3730-40d9-8355-b0a3d91adb16\", /* API key skickas med för att få lov att hämta datan */\n  },\n});\n\nclass fortniteStore extends Component {\n  state = {\n    storeInfo: [],\n  };\n\n  constructor() {\n    super();\n    this.getStoreInfo();\n  }\n\n  getStoreInfo = async () => {\n    let data = await api.get(\"/\").then(({ data }) => data);\n    this.setState({ storeInfo: data });\n  };\n\n  render() {\n    return (\n      <div>\n        <h1 className=\"rubrik\">I butiken idag</h1>\n        <Row>\n          {this.state.storeInfo.map((storeItem) => {\n            return (\n              <Col sm={3} md={3} lg={3} /* style={{border:\"1px solid lime, användes vid utveckling av carden\"}} */>\n                <Card\n                  bg=\"dark\"\n                  text=\"white\"\n                  className=\"FortniteShop-main-card my-2\"\n                >\n                  <Card.Header>\n                    <h4>{storeItem.name}</h4>\n                  </Card.Header>\n                  <Card.Img\n                    className=\"CardDeck-Home\"\n                    src={storeItem.imageUrl}\n                    alt=\"new\"\n                    className=\"Home-Card-img\"\n                  />\n\n                  <Card.Body>\n                    <h4>Rarity: {storeItem.rarity}</h4>\n                    <h4>Category: {storeItem.storeCategory}</h4>\n                    <h4>vBucks: {storeItem.vBucks}</h4>\n                  </Card.Body>\n                  <Card.Footer>\n                    <h4>ManifestId: {storeItem.manifestId}</h4>\n                  </Card.Footer>\n                </Card>\n              </Col>\n            );\n          })}\n        </Row>\n      </div>\n    );\n  }\n}\nexport default fortniteStore;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Button, Form, Card } from \"react-bootstrap\";\n\nclass loginHotell extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      roll: \"\",\n      status: false,\n    };\n  }\n\n  changeHandler = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n  ƒ;\n  submitHandler = async (e) => {\n    e.preventDefault();\n\n    let res = axios\n      .post(\n        \"https://thingproxy.freeboard.io/fetch/http://informatik10.ei.hv.se/UserService/Login\",\n        this.state\n      )\n      .then((res) => {\n        console.log(res);\n        this.setState({\n          status: res.data.status,\n        });\n        console.log(this.state.status);\n        if (this.state.status == true) {\n          this.setState({\n            statusAfter: \"Inloggniingsuppgifter verifierade\",\n            roll: res.data.role,\n          });\n          alert(\"Inloggniingsuppgifter verifierade\");\n        } else if (this.state.status == false) {\n          this.setState({\n            statusAfter: \"Inloggning inte godkänd\",\n          });\n          alert(\"Inloggning inte godkänd\");\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n        this.setState({\n          statusAfter: \"Inloggning misslyckades\",\n          status: res.status,\n        });\n        alert(\"Inloggning misslyckades\");\n      });\n  };\n\n  render() {\n    const { username, password } = this.state;\n    return (\n      <div>\n        <h1 className=\"rubrik\">Logga in</h1>\n        <Card\n          bg=\"dark\"\n          text=\"white\"\n          className=\"mb-3\"\n          style={{ color: `#000`, width: \"20rem\" }}\n        >\n          <Card.Body>\n            <Card.Title>Logga in på hotellet</Card.Title>\n            <Form onSubmit={this.submitHandler}>\n              <Form.Group>\n                <Form.Text>\n                  Logga in med inloggningsuppgifter för admin\n                </Form.Text>\n\n                <div>\n                  <Form.Control\n                    type=\"text\"\n                    name=\"username\"\n                    value={username}\n                    onChange={this.changeHandler}\n                    placeholder=\"Skriv in ditt användarnamn\"\n                  />\n                </div>\n                <br />\n                <div>\n                  <Form.Control\n                    type=\"password\"\n                    name=\"password\"\n                    value={password}\n                    onChange={this.changeHandler}\n                    placeholder=\"Skriv in ditt lösenord\"\n                  />\n                </div>\n                <br />\n                <Button type=\"submit\" variant=\"success\">\n                  Logga in\n                </Button>\n                <br />\n\n                <h3 style={{ marginTop: \"5px\" }}>{this.state.roll}</h3>\n                <h3 style={{ marginTop: \"5px\" }}>{this.state.statusAfter}</h3>\n              </Form.Group>\n            </Form>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\nexport default loginHotell;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Button, Form, Card } from \"react-bootstrap\";\nimport { Link, Redirect, Route } from \"react-router-dom\";\n\nclass addArena extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      arenaNamn: \"\",\n      stad: \"\",\n      landsKod: \"\",\n      kapacitet: \"\",\n      status: \"\",\n      statusAfter: \"\",\n    };\n  }\n\n  changeHandler = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  submitHandler = async (e) => {\n    e.preventDefault();\n\n    let res = axios\n      .post(\"http://localhost:5000/api/Arenas/\", this.state)\n      .then((res) => {\n        console.log(res);\n        if ((this.state.status = 204)) {\n          this.setState({\n            statusAfter: \"Registrering lyckades\",\n            status: res.status,\n          });\n          alert(\"Registrering av arena lyckades\");\n          <Route path=\"/arenor\">\n            <Redirect to=\"/arenor\" />\n          </Route>;\n        } else if ((this.state.status = !204)) {\n          this.setState({\n            statusAfter: \"Registrering misslyckades\",\n            status: res.status,\n          });\n          alert(\"Registrering av arena misslyckades\");\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n        this.setState({\n          statusAfter: \"Misslyckades registrera\",\n          status: res.status,\n        });\n        alert(\"Misslyckades registrera Arena\");\n      });\n  };\n\n  render() {\n    const { arenaNamn, stad, landsKod, kapacitet } = this.state;\n    return (\n      <div>\n        <h1 className=\"rubrik\">Lägg till ny en arena</h1>\n\n        <Card\n          bg=\"dark\"\n          text=\"white\"\n          className=\"mb-3\"\n          style={{ color: `#000`, width: \"20rem\" }}\n        >\n          <Card.Body>\n            <Card.Title>Arena skapare</Card.Title>\n            <Form onSubmit={this.submitHandler}>\n              <Form.Group>\n                <Form.Text>Mata in data för en ny arena</Form.Text>\n\n                <div>\n                  <Form.Control\n                    type=\"text\"\n                    name=\"arenaNamn\"\n                    value={arenaNamn}\n                    onChange={this.changeHandler}\n                    placeholder=\"Arena namn\"\n                  />\n                </div>\n                <br />\n                <div>\n                  <Form.Control\n                    type=\"text\"\n                    name=\"stad\"\n                    value={stad}\n                    onChange={this.changeHandler}\n                    placeholder=\"Stad\"\n                  />\n                </div>\n                <br />\n                <div>\n                  <Form.Control\n                    type=\"text\"\n                    name=\"landsKod\"\n                    value={landsKod}\n                    onChange={this.changeHandler}\n                    placeholder=\"Landskod\"\n                  />\n                </div>\n                <br />\n                <div>\n                  <Form.Control\n                    type=\"text\"\n                    name=\"kapacitet\"\n                    value={kapacitet}\n                    onChange={this.changeHandler}\n                    placeholder=\"Kapacitet\"\n                  />\n                </div>\n                <br />\n                <Button type=\"submit\" variant=\"success\">\n                  Registera arena\n                </Button>\n                <Button style={{ marginLeft: \"10px\" }} variant=\"danger\">\n                  <Link className=\"text-link\" to=\"/arenor\">\n                    Tillbaka\n                  </Link>\n                </Button>\n                <br />\n                <h3 style={{ marginTop: \"3px\" }}>{this.state.statusAfter}</h3>\n              </Form.Group>\n            </Form>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\nexport default addArena;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Button, Form, Card } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nclass editArena extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      id: \"\",\n      arenaNamn: \"\",\n      stad: \"\",\n      landsKod: \"\",\n      kapacitet: \"\",\n      statusText: \"\",\n      status: \"\",\n      statusAfter: \"\",\n    };\n  }\n\n  changeHandler = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  submitHandler = async (e) => {\n    e.preventDefault();\n\n    let res = axios\n      .put(\"http://localhost:5000/api/Arenas/\" + this.state.id, this.state)\n      .then((res) => {\n        console.log(res);\n        if ((this.state.status = 204)) {\n          this.setState({\n            statusAfter: \"Registrering lyckades\",\n            status: res.status,\n          });\n          alert(\"Registrering av arena lyckades\");\n        } else if ((this.state.status = !204)) {\n          this.setState({\n            statusAfter: \"Uppdatera misslyckades\",\n            status: res.status,\n          });\n          alert(\"Uppdatera arena misslyckades\");\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n        this.setState({\n          statusAfter: \"Misslyckades uppdatera\",\n          status: res.status,\n        });\n        alert(\"Misslyckades uppdatera\");\n      });\n  };\n\n  render() {\n    const { id, arenaNamn, stad, landsKod, kapacitet } = this.state;\n    return (\n      <div>\n        <h1 className=\"rubrik\">Ändra föjande arena</h1>\n\n        <Card\n          bg=\"dark\"\n          text=\"white\"\n          className=\"mb-3\"\n          style={{ color: `#000`, width: \"20rem\" }}\n        >\n          <Card.Body>\n            <Card.Title>Arena ändrare</Card.Title>\n            <Form onSubmit={this.submitHandler}>\n              <Form.Group>\n                <Form.Text>Ändra fält för aktiv arena</Form.Text>\n                <div>\n                  <Form.Control\n                    type=\"text\"\n                    name=\"id\"\n                    value={id}\n                    onChange={this.changeHandler}\n                    placeholder=\"Arena Id\"\n                  />\n                </div>\n                <br />\n\n                <div>\n                  <Form.Control\n                    type=\"text\"\n                    name=\"arenaNamn\"\n                    value={arenaNamn}\n                    onChange={this.changeHandler}\n                    placeholder=\"Arena namn\"\n                  />\n                </div>\n                <br />\n                <div>\n                  <Form.Control\n                    type=\"text\"\n                    name=\"stad\"\n                    value={stad}\n                    onChange={this.changeHandler}\n                    placeholder=\"Stad\"\n                  />\n                </div>\n                <br />\n                <div>\n                  <Form.Control\n                    type=\"text\"\n                    name=\"landsKod\"\n                    value={landsKod}\n                    onChange={this.changeHandler}\n                    placeholder=\"Landskod\"\n                  />\n                </div>\n                <br />\n                <div>\n                  <Form.Control\n                    type=\"text\"\n                    name=\"kapacitet\"\n                    value={kapacitet}\n                    onChange={this.changeHandler}\n                    placeholder=\"Kapacitet\"\n                  />\n                </div>\n                <br />\n                <Button type=\"submit\" variant=\"success\">\n                  Spara arena\n                </Button>\n                <Button style={{ marginLeft: \"10px\" }} variant=\"danger\">\n                  <Link className=\"text-link\" to=\"/arenor\">\n                    Tillbaka\n                  </Link>\n                </Button>\n                <br />\n                <h3 style={{ marginTop: \"3px\" }}>{this.state.statusAfter}</h3>\n                <br />\n              </Form.Group>\n            </Form>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\nexport default editArena;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Card, Button, Table, CardDeck, Row, Col } from \"react-bootstrap\";\n\nconst api = axios.create({\n  baseURL:\n    \"https://thingproxy.freeboard.io/fetch/http://api.fortnitetracker.com/v1/store\",\n  headers: {\n    \"TRN-Api-Key\": \"6fb87b36-3730-40d9-8355-b0a3d91adb16\", /* API key skickas med för att få lov att hämta datan */\n  },\n});\n\nclass fortniteStore extends Component {\n  state = {\n    storeInfo: [],\n  };\n\n  constructor() {\n    super();\n    this.getStoreInfo();\n  }\n\n  getStoreInfo = async () => {\n    let data = await api.get(\"/\").then(({ data }) => data);\n    this.setState({ storeInfo: data });\n  };\n\n  render() {\n    return (\n      <div>\n        <h1 style={{ color: \"#363535\" }} className=\"rubrik\">\n          I butiken idag\n        </h1>\n        <Card\n          bg=\"dark\"\n          text=\"white\"\n          border=\"light\"\n          className=\"mb-3\"\n          style={{ color: `#000`, width: \"52rem\" }}\n        >\n          <Card.Body>\n            <Card.Title>Uppdaterads dagligen vid 00:00 UTC</Card.Title>\n\n            <Table hover variant=\"dark\">\n              <thead>\n                <tr>\n                  <th>Bild</th>\n                  <th>Namn</th>\n                  <th>Sälsynthet</th>\n                  <th>Kategori</th>\n                  <th>vBucks</th>\n                  <th>Manifest</th>\n                </tr>\n              </thead>\n              <tbody>\n                {this.state.storeInfo.map((storeItem) => {\n                  return (\n                    <tr>\n                      <td>\n                        <img\n                          className=\"photo\"\n                          src={storeItem.imageUrl}\n                          alt=\"new\"\n                        />\n                      </td>\n                      <td>{storeItem.name}</td>\n                      <td>{storeItem.rarity}</td>\n                      <td>{storeItem.storeCategory}</td>\n                      <td>{storeItem.vBucks}</td>\n                      <td>{storeItem.manifestId}</td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\nexport default fortniteStore;\n","import Home from \"./home\";\nimport Navbaren from \"./navbar\";\nimport Arenor from \"./arenor\";\nimport Weather from \"./weather\";\nimport Covid from \"./covid\";\nimport covidCountry from \"./covidCountry\";\nimport users from \"./users\";\nimport fortniteStore from \"./fortniteStore\";\nimport loginHotell from \"./loginHotell\";\nimport addArena from \"./addArena\";\nimport editArena from \"./editArena\";\nimport fortniteStoreList from \"./fortniteStoreList\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbaren />\n        <Switch>\n          <Route path=\"/home\" component={Home} />\n          <Route path=\"/arenor\" component={Arenor} />\n          <Route path=\"/weather\" component={Weather} />\n          <Route path=\"/covid\" component={Covid} />\n          <Route path=\"/covidCountry\" component={covidCountry} />\n          <Route exact path=\"/users\" component={users} />\n          <Route exact path=\"/fortniteStore\" component={fortniteStore} />\n          <Route exact path=\"/loginHotell\" component={loginHotell} />\n          <Route exact path=\"/addArena\" component={addArena} />\n          <Route exact path=\"/editArena/:id\" component={editArena} />\n          <Route\n            exact\n            path=\"/fortniteStoreList\"\n            component={fortniteStoreList}\n          />\n          <Route exact path=\"/\" component={Home} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}